---
- name: Common | Override default data with user one
  set_fact:
    s_cd: "{{ server_common_data | combine(server_common_group, server_common_host, recursive=True) }}"
  tags:
    - always

- name: Common | Run apt update
  become: yes
  apt:
    update_cache: yes
  when: ansible_facts['os_family'] == "Debian" and ansible_facts['distribution'] == "Ubuntu"
  tags:
    - packages

- name: Common | Packages installation
  become: yes
  package:
    name: "{{ item }}"
    state: present
  with_items: "{{ s_cd.packages }}"
  retries: 3
  delay: 10
  register: "package_install"
  until: "package_install is succeeded"
  tags:
    - packages

- name: Common | Set hostname
  become: yes
  hostname:
    name: "{{ s_cd.dns_hostname }}"
  tags:
    - hostname

- name: Common | Add hostname to hosts
  become: yes
  lineinfile:
    path: /etc/hosts
    regexp: '^127\.0\.1\.1'
    line: "127.0.1.1 {{ s_cd.dns_hostname }}"
    owner: root
    group: root
    mode: 0644
    insertafter: '^127\.0\.0\.1'

- name: Common | Ensure message of the day
  become: yes
  copy:
    content: "{{ s_cd.motd }}"
    dest: /etc/issue.net
    owner: root
    group: root
    mode: 0644

- name: Common | Users | Ensure base bashrc history directory
  become: yes
  file:
    state: directory
    path: /var/log/bash_history
    owner: root
    group: root
    mode: 0777
  tags:
    - users
    - logfiles

- name: Common | Users | Ensure base irbrc history directory
  become: yes
  file:
    state: directory
    path: /var/log/irb
    owner: root
    group: root
    mode: 0777
  tags:
    - users
    - logfiles

- name: Ensure Bash skeleton common lines
  become: yes
  copy:
    src: "skel/{{ item }}"
    dest: "/etc/skel/{{ item }}"
    owner: root
    group: root
    mode: 0644
  with_items:
    - .bashrc
    - .irbrc

- name: Ensure custom directories
  become: yes
  file:
    state: directory
    path: "{{ item.path }}"
    mode: "{{ item.mode|default('0755') }}"
    owner: "{{ item.owner|default('root') }}"
    group: "{{ item.group|default('root') }}"
  with_items: "{{ s_cd.custom_dirs }}"

- name: Ensure custom groups
  become: yes
  group:
    name: "{{ item.name }}"
    state: "{{ item.state|default('present') }}"
  with_items: "{{ s_cd.groups }}"

- name: Common | Users
  include_tasks: users.yml
  with_dict: "{{ s_cd.users }}"
  loop_control:
    loop_var: user
  tags:
    - users
    - ssh_keys

- name: Common | SSH keys
  include_tasks: ssh_keys.yml
  with_dict: "{{ s_cd.users }}"
  loop_control:
    loop_var: user
  tags:
    - users
    - ssh_keys

- name: Common | Users | Disable root password
  become: yes
  user:
    name: root
    password: "!"
  when: s_cd.disable_root_password
  tags:
    - users
    - root_password

- name: Common | Generate DH params for different services
  import_tasks: dhparam.yml
  tags:
    - dhparam

- name: Set soft nofile limits
  become: yes
  pam_limits:
    domain: "*"
    limit_type: soft
    limit_item: nofile
    value: "{{ s_cd.limits_nofile.soft }}"

- name: Set hard nofile limits
  become: yes
  pam_limits:
    domain: "*"
    limit_type: hard
    limit_item: nofile
    value: "{{ s_cd.limits_nofile.hard }}"

- name: Common | Include unattended upgrades configuration
  import_tasks: unattended_upgrades.yml
  tags:
    - unattended_upgrades

- name: Configure Systemd
  import_tasks: systemd.yml
  tags:
    - systemd

- name: Configure DNS 
  import_tasks: dns.yml
  tags:
    - dns
